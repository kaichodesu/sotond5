GAS LISTING /tmp/ccqFA9Ez.s 			page 1


   1               		.file	"alg.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/kaicho/Southampton/sotond5/sotond5/libalg/",100,0,2,.Ltext0
   8               		.stabs	"alg.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               	.global	__ltsf2
  13               	.global	__addsf3
  14               	.global	__gtsf2
  15               	.global	__gesf2
  16               	.global	__lesf2
  17               		.stabs	"algorithm:F(0,1)=(0,1)",36,0,22,algorithm
  18               		.stabs	"uint8_t:t(0,2)=(0,3)=@s8;r(0,3);0;255;",128,0,126,0
  19               		.stabs	"void:t(0,1)",128,0,0,0
  20               		.stabs	"unsigned char:t(0,3)",128,0,0,0
  21               	.global	algorithm
  22               		.type	algorithm, @function
  23               	algorithm:
   1:alg.c         **** #include <stdbool.h>
   2:alg.c         **** #include <math.h>
   3:alg.c         **** #include "../libio/io.h"
   4:alg.c         **** #include "../liblcd/lcd.h"
   5:alg.c         **** #include "../mainsreq/mainsreq.h"
   6:alg.c         **** 
   7:alg.c         **** //========================================================================//
   8:alg.c         **** // Scenario constants
   9:alg.c         **** const uint8_t MainsMAX = 2;
  10:alg.c         **** const uint8_t BatteryChargeI = 1;
  11:alg.c         **** const float Load1 = 1.2;
  12:alg.c         **** const float Load2 = 2;
  13:alg.c         **** const float Load3 = 0.8;
  14:alg.c         **** int BusVMAX = 2;
  15:alg.c         **** //========================================================================//
  16:alg.c         **** 
  17:alg.c         **** //  uints for initial time sensitive data storage
  18:alg.c         **** float PV, Wind, BusI, MainsReq, BusV;
  19:alg.c         **** int BatteryDischI = 1;
  20:alg.c         **** bool LS1, LS2, LS3;
  21:alg.c         **** 
  22:alg.c         **** void algorithm(void){
  24               		.stabn	68,0,22,.LM0-.LFBB1
  25               	.LM0:
  26               	.LFBB1:
  27 0000 CF93      		push r28
  28 0002 DF93      		push r29
  29 0004 00D0      		rcall .
  30 0006 00D0      		rcall .
  31 0008 CDB7      		in r28,__SP_L__
  32 000a DEB7      		in r29,__SP_H__
  33               	/* prologue: function */
  34               	/* frame size = 4 */
  35               	/* stack size = 6 */
GAS LISTING /tmp/ccqFA9Ez.s 			page 2


  36               	.L__stack_usage = 6
  23:alg.c         **** 
  24:alg.c         **** 	// setting up output variables
  25:alg.c         **** 
  26:alg.c         **** 
  27:alg.c         **** //Initialisation here, Load1,2,3, BatteryChargeI, PV and Wind will be calculated from their respect
  28:alg.c         **** 
  29:alg.c         **** //We will monitor the pin until its value is approx 0, start a timer until the max value is reached
  30:alg.c         **** 
  31:alg.c         **** // The interrupt will be defined on initialisation, every time we reach TOP, it will trigger.
  32:alg.c         **** 
  33:alg.c         **** //Need to set up a PWM (Phase & frequency correct mode on timer 1)
  34:alg.c         **** 
  35:alg.c         **** //Need to initialise ADC ports (free-running mode)
  36:alg.c         **** 
  37:alg.c         **** //On interrupt we should also calculate MainsMAX. To do this:
  38:alg.c         **** 
  39:alg.c         **** /* On initialisation, Measure BusI and keep loads off while battery charges for a brief moment whil
  40:alg.c         ****  Measure BusI and request 10
  41:alg.c         ****  lower the request by some value and monitor BusV
  42:alg.c         ****  when BusV drops below BusVMAX (approx 2.38)increment BusV so that BusV is back to normal
  43:alg.c         ****  */
  44:alg.c         **** 
  45:alg.c         **** //We enter the algorithm below.
  46:alg.c         **** 
  47:alg.c         **** 
  48:alg.c         **** //if the difference between busI and MainsMAX + PV + Wind less than BatteryChargeI, discharge batte
  49:alg.c         **** 
  50:alg.c         **** if(BusV < 3.3) // bus voltage natural value
  37               		.stabn	68,0,50,.LM1-.LFBB1
  38               	.LM1:
  39 000c 23E3      		ldi r18,lo8(51)
  40 000e 33E3      		ldi r19,lo8(51)
  41 0010 43E5      		ldi r20,lo8(83)
  42 0012 50E4      		ldi r21,lo8(64)
  43 0014 6091 0000 		lds r22,BusV
  44 0018 7091 0000 		lds r23,BusV+1
  45 001c 8091 0000 		lds r24,BusV+2
  46 0020 9091 0000 		lds r25,BusV+3
  47 0024 0E94 0000 		call __ltsf2
  48 0028 87FF      		sbrs r24,7
  49 002a 00C0      		rjmp .L2
  51:alg.c         **** {
  52:alg.c         **** 	MainsReq +=0.1;
  50               		.stabn	68,0,52,.LM2-.LFBB1
  51               	.LM2:
  52 002c 2DEC      		ldi r18,lo8(-51)
  53 002e 3CEC      		ldi r19,lo8(-52)
  54 0030 4CEC      		ldi r20,lo8(-52)
  55 0032 5DE3      		ldi r21,lo8(61)
  56 0034 6091 0000 		lds r22,MainsReq
  57 0038 7091 0000 		lds r23,MainsReq+1
  58 003c 8091 0000 		lds r24,MainsReq+2
  59 0040 9091 0000 		lds r25,MainsReq+3
  60 0044 0E94 0000 		call __addsf3
  61 0048 6093 0000 		sts MainsReq,r22
  62 004c 7093 0000 		sts MainsReq+1,r23
GAS LISTING /tmp/ccqFA9Ez.s 			page 3


  63 0050 8093 0000 		sts MainsReq+2,r24
  64 0054 9093 0000 		sts MainsReq+3,r25
  65               	.L2:
  53:alg.c         **** }
  54:alg.c         **** 
  55:alg.c         **** 
  56:alg.c         **** 
  57:alg.c         **** if(MainsReq > 10)
  66               		.stabn	68,0,57,.LM3-.LFBB1
  67               	.LM3:
  68 0058 8091 0000 		lds r24,MainsReq
  69 005c 9091 0000 		lds r25,MainsReq+1
  70 0060 A091 0000 		lds r26,MainsReq+2
  71 0064 B091 0000 		lds r27,MainsReq+3
  72 0068 8983      		std Y+1,r24
  73 006a 9A83      		std Y+2,r25
  74 006c AB83      		std Y+3,r26
  75 006e BC83      		std Y+4,r27
  76               		.stabn	68,0,57,.LM4-.LFBB1
  77               	.LM4:
  78 0070 20E0      		ldi r18,0
  79 0072 30E0      		ldi r19,0
  80 0074 40E2      		ldi r20,lo8(32)
  81 0076 51E4      		ldi r21,lo8(65)
  82 0078 BC01      		movw r22,r24
  83 007a CD01      		movw r24,r26
  84 007c 0E94 0000 		call __gtsf2
  85 0080 1816      		cp __zero_reg__,r24
  86 0082 04F0      		brlt .L4
  58:alg.c         **** {
  59:alg.c         **** MainsReq = 10;
  60:alg.c         **** }
  61:alg.c         **** 
  62:alg.c         **** 
  63:alg.c         **** if(MainsReq >= 10)
  87               		.stabn	68,0,63,.LM5-.LFBB1
  88               	.LM5:
  89 0084 20E0      		ldi r18,0
  90 0086 30E0      		ldi r19,0
  91 0088 40E2      		ldi r20,lo8(32)
  92 008a 51E4      		ldi r21,lo8(65)
  93 008c 6981      		ldd r22,Y+1
  94 008e 7A81      		ldd r23,Y+2
  95 0090 8B81      		ldd r24,Y+3
  96 0092 9C81      		ldd r25,Y+4
  97 0094 0E94 0000 		call __gesf2
  98 0098 87FD      		sbrc r24,7
  99 009a 00C0      		rjmp .L27
 100               	.L4:
  64:alg.c         **** {
  65:alg.c         **** 	MainsReq = 10;
 101               		.stabn	68,0,65,.LM6-.LFBB1
 102               	.LM6:
 103 009c 80E0      		ldi r24,0
 104 009e 90E0      		ldi r25,0
 105 00a0 A0E2      		ldi r26,lo8(32)
 106 00a2 B1E4      		ldi r27,lo8(65)
GAS LISTING /tmp/ccqFA9Ez.s 			page 4


 107 00a4 8093 0000 		sts MainsReq,r24
 108 00a8 9093 0000 		sts MainsReq+1,r25
 109 00ac A093 0000 		sts MainsReq+2,r26
 110 00b0 B093 0000 		sts MainsReq+3,r27
 111               	.L7:
  66:alg.c         **** }
  67:alg.c         **** 
  68:alg.c         **** if(MainsReq <= 0)
  69:alg.c         **** {
  70:alg.c         **** 	MainsReq = 0;
  71:alg.c         **** }
  72:alg.c         **** 
  73:alg.c         **** if(LC1 == 0  && LC2 == 0 && LC3 == 0)
 112               		.stabn	68,0,73,.LM7-.LFBB1
 113               	.LM7:
 114 00b4 80B1      		in r24,0
  74:alg.c         **** {
  75:alg.c         **** 	LS1_lo();  LS1= 0;
  76:alg.c         **** 	LS2_lo();  LS2= 0;
  77:alg.c         **** 	LS3_lo();  LS3= 0;
  78:alg.c         **** 
  79:alg.c         **** 	DBAT_lo();
  80:alg.c         **** 	CBAT_hi();
  81:alg.c         **** 
  82:alg.c         **** }
  83:alg.c         **** 
  84:alg.c         **** if(LC1 == 1  && LC2 == 0 && LC3 == 0) //we will take the busI in the next if loop BusIdiff. If BusI
 115               		.stabn	68,0,84,.LM8-.LFBB1
 116               	.LM8:
 117 00b6 0099      		sbic 0,0
 118               		.stabn	68,0,84,.LM9-.LFBB1
 119               	.LM9:
 120 00b8 80B1      		in r24,0
 121               	.L9:
  85:alg.c         **** {
  86:alg.c         **** 	if( (MainsMAX + PV + Wind) - Load1 < BatteryChargeI  )
  87:alg.c         **** 	{
  88:alg.c         **** 	CBAT_lo();   DBAT_hi();
  89:alg.c         **** 	}
  90:alg.c         **** 	else {DBAT_lo();   CBAT_hi();}
  91:alg.c         **** 
  92:alg.c         **** 	 if(Load1 < MainsMAX + PV + Wind)
  93:alg.c         **** 	 {
  94:alg.c         **** 		 LS1_hi();  LS1= 1;
  95:alg.c         **** 	 }
  96:alg.c         **** 	 else {LS1_lo();  LS1= 0;}
  97:alg.c         **** 	 if(LS1 == 0)
  98:alg.c         **** 	 {
  99:alg.c         **** 		 DBAT_lo();   CBAT_hi();
 100:alg.c         **** 	 }
 101:alg.c         **** 
 102:alg.c         **** }
 103:alg.c         **** 
 104:alg.c         **** 
 105:alg.c         **** 
 106:alg.c         **** if(LC1 == 0  && LC2 == 1 && LC3 == 0 )
 122               		.stabn	68,0,106,.LM10-.LFBB1
GAS LISTING /tmp/ccqFA9Ez.s 			page 5


 123               	.LM10:
 124 00ba 80B1      		in r24,0
 107:alg.c         **** {
 108:alg.c         **** 	if( (MainsMAX + PV + Wind) - Load2 < BatteryChargeI  )
 109:alg.c         **** 	{
 110:alg.c         **** 	CBAT_lo();   DBAT_hi();
 111:alg.c         **** 	}
 112:alg.c         **** 	else {DBAT_lo();   CBAT_hi();}
 113:alg.c         **** 	if(Load2 < MainsMAX + PV + Wind)
 114:alg.c         **** 	 {
 115:alg.c         **** 		 LS2_hi();  LS2= 1;
 116:alg.c         **** 	 }
 117:alg.c         **** 	 else {LS2_lo();  LS2= 0;}
 118:alg.c         **** 	 if(LS2 == 1)
 119:alg.c         **** 	 {
 120:alg.c         **** 		 DBAT_lo();   CBAT_hi();
 121:alg.c         **** 	 }
 122:alg.c         **** }
 123:alg.c         **** 
 124:alg.c         **** 
 125:alg.c         **** 
 126:alg.c         **** 
 127:alg.c         **** if(LC1 == 1  && LC2 == 1 && LC3 == 0)
 125               		.stabn	68,0,127,.LM11-.LFBB1
 126               	.LM11:
 127 00bc 0099      		sbic 0,0
 128               		.stabn	68,0,127,.LM12-.LFBB1
 129               	.LM12:
 130 00be 80B1      		in r24,0
 131               	.L10:
 128:alg.c         **** {
 129:alg.c         **** 	if(Load1 + Load2 < MainsMAX + PV + Wind)
 130:alg.c         **** 	 {
 131:alg.c         **** 		 LS2_hi();  LS2= 1;
 132:alg.c         **** 		 if( (MainsMAX + PV + Wind) - (Load1 + Load2) < BatteryChargeI  )
 133:alg.c         **** 		{
 134:alg.c         **** 			CBAT_lo();   DBAT_hi();
 135:alg.c         **** 		}
 136:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 137:alg.c         **** 	 }
 138:alg.c         **** 	 else LS2_lo();
 139:alg.c         **** 
 140:alg.c         **** 	 if(LS2 == 1)
 141:alg.c         **** 	 {
 142:alg.c         **** 
 143:alg.c         **** 	 	if( (MainsMAX + PV + Wind) - Load1 < BatteryChargeI  )
 144:alg.c         **** 		{
 145:alg.c         **** 			CBAT_lo();   DBAT_hi();
 146:alg.c         **** 		}
 147:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 148:alg.c         **** 	 }
 149:alg.c         **** 
 150:alg.c         **** 	 if(Load1 < MainsMAX + PV + Wind)
 151:alg.c         **** 	 {
 152:alg.c         **** 		 LS1_hi();  LS1= 1;
 153:alg.c         **** 	 }
 154:alg.c         **** 	 else {LS1_lo();  LS1= 0;}
GAS LISTING /tmp/ccqFA9Ez.s 			page 6


 155:alg.c         **** 
 156:alg.c         **** 	 if(LS1 == 0)
 157:alg.c         **** 	 {
 158:alg.c         **** 		 DBAT_lo();   CBAT_hi();
 159:alg.c         **** 	 }
 160:alg.c         **** 
 161:alg.c         **** 
 162:alg.c         **** 
 163:alg.c         **** }
 164:alg.c         **** 
 165:alg.c         **** 
 166:alg.c         **** if(LC1 == 0  && LC2 == 0 && LC3 == 1)
 132               		.stabn	68,0,166,.LM13-.LFBB1
 133               	.LM13:
 134 00c0 80B1      		in r24,0
 167:alg.c         **** {
 168:alg.c         **** 	if(Load3 < MainsMAX + PV + Wind)
 169:alg.c         **** 	{
 170:alg.c         **** 		LS3_hi();  LS3= 1;
 171:alg.c         **** 		if( (MainsMAX + PV + Wind) - Load3 < BatteryChargeI  )
 172:alg.c         **** 		{
 173:alg.c         **** 			CBAT_lo();   DBAT_hi();
 174:alg.c         **** 		}
 175:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 176:alg.c         **** 	}
 177:alg.c         **** 	else {LS3_lo();  LS3= 0;}
 178:alg.c         **** 
 179:alg.c         **** }
 180:alg.c         **** 
 181:alg.c         **** 
 182:alg.c         **** if(LC1 == 1  && LC2 == 0 && LC3 == 1)
 135               		.stabn	68,0,182,.LM14-.LFBB1
 136               	.LM14:
 137 00c2 0099      		sbic 0,0
 138               		.stabn	68,0,182,.LM15-.LFBB1
 139               	.LM15:
 140 00c4 80B1      		in r24,0
 141               	.L11:
 183:alg.c         **** {
 184:alg.c         **** 	if(Load3 + Load1  < MainsMAX + PV + Wind)
 185:alg.c         **** 	{
 186:alg.c         **** 		LS3_hi();  LS3= 1;
 187:alg.c         **** 		if( (MainsMAX + PV + Wind) -  (Load3 + Load1) < BatteryChargeI  )
 188:alg.c         **** 		{
 189:alg.c         **** 			CBAT_lo();   DBAT_hi();
 190:alg.c         **** 		}
 191:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 192:alg.c         **** 
 193:alg.c         **** 	}
 194:alg.c         **** 	else {LS3_lo();  LS3= 0;}
 195:alg.c         **** 
 196:alg.c         **** 	if(LS3 == 1)
 197:alg.c         **** 	{
 198:alg.c         **** 		if( (MainsMAX + PV + Wind) -  Load1 < BatteryChargeI  )
 199:alg.c         **** 		{
 200:alg.c         **** 			CBAT_lo();   DBAT_hi();
 201:alg.c         **** 		}
GAS LISTING /tmp/ccqFA9Ez.s 			page 7


 202:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 203:alg.c         **** 	}
 204:alg.c         **** 
 205:alg.c         **** 	if(Load1 < MainsMAX + PV + Wind)
 206:alg.c         **** 	{
 207:alg.c         **** 		LS1_hi();  LS1= 1;
 208:alg.c         **** 	}
 209:alg.c         **** 
 210:alg.c         **** 	else {LS1_lo();  LS1= 0;}
 211:alg.c         **** 
 212:alg.c         **** 	if(LS1 == 0)
 213:alg.c         **** 	{
 214:alg.c         **** 		DBAT_lo();   CBAT_hi();
 215:alg.c         **** 	}
 216:alg.c         **** 
 217:alg.c         **** 
 218:alg.c         **** }
 219:alg.c         **** 
 220:alg.c         **** if(LC1 == 0  && LC2 == 1 && LC3 == 1  )
 142               		.stabn	68,0,220,.LM16-.LFBB1
 143               	.LM16:
 144 00c6 80B1      		in r24,0
 221:alg.c         **** {
 222:alg.c         **** 	if(Load2 + Load3 < MainsMAX + PV + Wind)
 223:alg.c         **** 	{
 224:alg.c         **** 		LS3_hi();  LS3= 1;
 225:alg.c         **** 		if( (MainsMAX + PV + Wind) - (Load2 + Load3) < BatteryChargeI  )
 226:alg.c         **** 		{
 227:alg.c         **** 			CBAT_lo();   DBAT_hi();
 228:alg.c         **** 		}
 229:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 230:alg.c         **** 
 231:alg.c         **** 	}
 232:alg.c         **** 	else {LS3_lo();  LS3= 0;}
 233:alg.c         **** 	if(LS3 == 1)
 234:alg.c         **** 	{
 235:alg.c         **** 		if( (MainsMAX + PV + Wind) - Load2 < BatteryChargeI  )
 236:alg.c         **** 		{
 237:alg.c         **** 			CBAT_lo();   DBAT_hi();
 238:alg.c         **** 		}
 239:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 240:alg.c         **** 	}
 241:alg.c         **** 
 242:alg.c         **** 	if(Load2 < MainsMAX + PV + Wind)
 243:alg.c         **** 	{
 244:alg.c         **** 		LS2_hi();  LS2= 1;
 245:alg.c         **** 	}
 246:alg.c         **** 
 247:alg.c         **** 	else {LS2_lo();  LS2= 0;}
 248:alg.c         **** 	if(LS2 == 1)
 249:alg.c         **** 	{
 250:alg.c         **** 		DBAT_lo();   CBAT_hi();
 251:alg.c         **** 	}
 252:alg.c         **** 
 253:alg.c         **** 
 254:alg.c         **** }
 255:alg.c         **** 
GAS LISTING /tmp/ccqFA9Ez.s 			page 8


 256:alg.c         **** 
 257:alg.c         **** if(LC1 == 1 && LC2 == 1 && LC3 == 1 )
 145               		.stabn	68,0,257,.LM17-.LFBB1
 146               	.LM17:
 147 00c8 0099      		sbic 0,0
 148               		.stabn	68,0,257,.LM18-.LFBB1
 149               	.LM18:
 150 00ca 80B1      		in r24,0
 151               	.L1:
 152               	/* epilogue start */
 258:alg.c         **** {
 259:alg.c         **** 	if(Load1 + Load2 + Load3  < MainsMAX + PV + Wind)
 260:alg.c         **** 	{
 261:alg.c         **** 		LS3_hi();  LS3= 1;
 262:alg.c         **** 		if( (MainsMAX + PV + Wind) - (Load1 + Load2 + Load3) < BatteryChargeI  )
 263:alg.c         **** 		{
 264:alg.c         **** 			CBAT_lo();   DBAT_hi();
 265:alg.c         **** 		}
 266:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 267:alg.c         **** 	}
 268:alg.c         **** 
 269:alg.c         **** 	else {LS3_lo();  LS3= 0;}
 270:alg.c         **** 	if(LS3 == 1)
 271:alg.c         **** 	{
 272:alg.c         **** 		if( (MainsMAX + PV + Wind) - (Load1 + Load2) < BatteryChargeI  )
 273:alg.c         **** 		{
 274:alg.c         **** 			CBAT_lo();   DBAT_hi();
 275:alg.c         **** 		}
 276:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 277:alg.c         **** 	}
 278:alg.c         **** 
 279:alg.c         **** 
 280:alg.c         **** 	if(Load2 + Load1 < MainsMAX + PV + Wind)
 281:alg.c         **** 	{
 282:alg.c         **** 		LS2_hi();  LS2= 1;
 283:alg.c         **** 	}
 284:alg.c         **** 	else {LS2_lo();  LS2= 0;}
 285:alg.c         **** 
 286:alg.c         **** 	if(LS2 == 1)
 287:alg.c         **** 	{
 288:alg.c         **** 		if( (MainsMAX + PV + Wind) - Load1 < BatteryChargeI  )
 289:alg.c         **** 		{
 290:alg.c         **** 			CBAT_lo();   DBAT_hi();
 291:alg.c         **** 		}
 292:alg.c         **** 		else {DBAT_lo();   CBAT_hi();}
 293:alg.c         **** 	}
 294:alg.c         **** 	if(Load1 < MainsMAX + PV + Wind)
 295:alg.c         **** 	{
 296:alg.c         **** 		LS1_hi();  LS1= 1;
 297:alg.c         **** 	}
 298:alg.c         **** 	else {LS1_lo();  LS1= 0;}
 299:alg.c         **** 		if(LS1 == 0)
 300:alg.c         **** 		{
 301:alg.c         **** 			DBAT_lo();   CBAT_hi();
 302:alg.c         **** 		}
 303:alg.c         **** 	}
 304:alg.c         **** 
GAS LISTING /tmp/ccqFA9Ez.s 			page 9


 305:alg.c         **** }
 153               		.stabn	68,0,305,.LM19-.LFBB1
 154               	.LM19:
 155 00cc 0F90      		pop __tmp_reg__
 156 00ce 0F90      		pop __tmp_reg__
 157 00d0 0F90      		pop __tmp_reg__
 158 00d2 0F90      		pop __tmp_reg__
 159 00d4 DF91      		pop r29
 160 00d6 CF91      		pop r28
 161 00d8 0895      		ret
 162               	.L27:
  68:alg.c         **** {
 163               		.stabn	68,0,68,.LM20-.LFBB1
 164               	.LM20:
 165 00da 20E0      		ldi r18,0
 166 00dc 30E0      		ldi r19,0
 167 00de A901      		movw r20,r18
 168 00e0 6981      		ldd r22,Y+1
 169 00e2 7A81      		ldd r23,Y+2
 170 00e4 8B81      		ldd r24,Y+3
 171 00e6 9C81      		ldd r25,Y+4
 172 00e8 0E94 0000 		call __lesf2
 173 00ec 1816      		cp __zero_reg__,r24
 174 00ee 04F0      		brlt .L7
  70:alg.c         **** }
 175               		.stabn	68,0,70,.LM21-.LFBB1
 176               	.LM21:
 177 00f0 1092 0000 		sts MainsReq,__zero_reg__
 178 00f4 1092 0000 		sts MainsReq+1,__zero_reg__
 179 00f8 1092 0000 		sts MainsReq+2,__zero_reg__
 180 00fc 1092 0000 		sts MainsReq+3,__zero_reg__
 181 0100 00C0      		rjmp .L7
 182               		.size	algorithm, .-algorithm
 183               	.Lscope1:
 184               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 185               	.global	LS3
 186               		.section .bss
 187               		.type	LS3, @object
 188               		.size	LS3, 1
 189               	LS3:
 190 0000 00        		.zero	1
 191               		.stabs	"LS3:G(0,4)=@s8;-16;",32,0,20,0
 192               		.stabs	"_Bool:t(0,4)",128,0,0,0
 193               	.global	LS2
 194               		.type	LS2, @object
 195               		.size	LS2, 1
 196               	LS2:
 197 0001 00        		.zero	1
 198               		.stabs	"LS2:G(0,4)",32,0,20,0
 199               	.global	LS1
 200               		.type	LS1, @object
 201               		.size	LS1, 1
 202               	LS1:
 203 0002 00        		.zero	1
 204               		.stabs	"LS1:G(0,4)",32,0,20,0
 205               	.global	BatteryDischI
 206               		.data
GAS LISTING /tmp/ccqFA9Ez.s 			page 10


 207               		.type	BatteryDischI, @object
 208               		.size	BatteryDischI, 2
 209               	BatteryDischI:
 210 0000 0100      		.word	1
 211               		.stabs	"BatteryDischI:G(0,5)=r(0,5);-32768;32767;",32,0,19,0
 212               		.stabs	"int:t(0,5)",128,0,0,0
 213               	.global	BusV
 214               		.section .bss
 215               		.type	BusV, @object
 216               		.size	BusV, 4
 217               	BusV:
 218 0003 0000 0000 		.zero	4
 219               		.stabs	"BusV:G(0,6)=r(0,5);4;0;",32,0,18,0
 220               		.stabs	"float:t(0,6)",128,0,0,0
 221               	.global	MainsReq
 222               		.type	MainsReq, @object
 223               		.size	MainsReq, 4
 224               	MainsReq:
 225 0007 0000 0000 		.zero	4
 226               		.stabs	"MainsReq:G(0,6)",32,0,18,0
 227               	.global	BusI
 228               		.type	BusI, @object
 229               		.size	BusI, 4
 230               	BusI:
 231 000b 0000 0000 		.zero	4
 232               		.stabs	"BusI:G(0,6)",32,0,18,0
 233               	.global	Wind
 234               		.type	Wind, @object
 235               		.size	Wind, 4
 236               	Wind:
 237 000f 0000 0000 		.zero	4
 238               		.stabs	"Wind:G(0,6)",32,0,18,0
 239               	.global	PV
 240               		.type	PV, @object
 241               		.size	PV, 4
 242               	PV:
 243 0013 0000 0000 		.zero	4
 244               		.stabs	"PV:G(0,6)",32,0,18,0
 245               	.global	BusVMAX
 246               		.data
 247               		.type	BusVMAX, @object
 248               		.size	BusVMAX, 2
 249               	BusVMAX:
 250 0002 0200      		.word	2
 251               		.stabs	"BusVMAX:G(0,5)",32,0,14,0
 252               	.global	Load3
 253               		.section	.rodata
 254               		.type	Load3, @object
 255               		.size	Load3, 4
 256               	Load3:
 257 0000 CD        		.byte	-51
 258 0001 CC        		.byte	-52
 259 0002 4C        		.byte	76
 260 0003 3F        		.byte	63
 261               		.stabs	"Load3:G(0,7)=k(0,6)",32,0,13,0
 262               	.global	Load2
 263               		.type	Load2, @object
GAS LISTING /tmp/ccqFA9Ez.s 			page 11


 264               		.size	Load2, 4
 265               	Load2:
 266 0004 00        		.byte	0
 267 0005 00        		.byte	0
 268 0006 00        		.byte	0
 269 0007 40        		.byte	64
 270               		.stabs	"Load2:G(0,7)",32,0,12,0
 271               	.global	Load1
 272               		.type	Load1, @object
 273               		.size	Load1, 4
 274               	Load1:
 275 0008 9A        		.byte	-102
 276 0009 99        		.byte	-103
 277 000a 99        		.byte	-103
 278 000b 3F        		.byte	63
 279               		.stabs	"Load1:G(0,7)",32,0,11,0
 280               	.global	BatteryChargeI
 281               		.type	BatteryChargeI, @object
 282               		.size	BatteryChargeI, 1
 283               	BatteryChargeI:
 284 000c 01        		.byte	1
 285               		.stabs	"BatteryChargeI:G(0,8)=k(0,2)",32,0,10,0
 286               	.global	MainsMAX
 287               		.type	MainsMAX, @object
 288               		.size	MainsMAX, 1
 289               	MainsMAX:
 290 000d 02        		.byte	2
 291               		.stabs	"MainsMAX:G(0,8)",32,0,9,0
 292               		.text
 293               		.stabs	"",100,0,0,.Letext0
 294               	.Letext0:
 295               		.ident	"GCC: (GNU) 11.2.0"
 296               	.global __do_copy_data
 297               	.global __do_clear_bss
GAS LISTING /tmp/ccqFA9Ez.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 alg.c
     /tmp/ccqFA9Ez.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccqFA9Ez.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccqFA9Ez.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccqFA9Ez.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccqFA9Ez.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccqFA9Ez.s:23     .text:0000000000000000 algorithm
     /tmp/ccqFA9Ez.s:217    .bss:0000000000000003 BusV
     /tmp/ccqFA9Ez.s:224    .bss:0000000000000007 MainsReq
     /tmp/ccqFA9Ez.s:189    .bss:0000000000000000 LS3
     /tmp/ccqFA9Ez.s:196    .bss:0000000000000001 LS2
     /tmp/ccqFA9Ez.s:202    .bss:0000000000000002 LS1
     /tmp/ccqFA9Ez.s:209    .data:0000000000000000 BatteryDischI
     /tmp/ccqFA9Ez.s:230    .bss:000000000000000b BusI
     /tmp/ccqFA9Ez.s:236    .bss:000000000000000f Wind
     /tmp/ccqFA9Ez.s:242    .bss:0000000000000013 PV
     /tmp/ccqFA9Ez.s:249    .data:0000000000000002 BusVMAX
     /tmp/ccqFA9Ez.s:256    .rodata:0000000000000000 Load3
     /tmp/ccqFA9Ez.s:265    .rodata:0000000000000004 Load2
     /tmp/ccqFA9Ez.s:274    .rodata:0000000000000008 Load1
     /tmp/ccqFA9Ez.s:283    .rodata:000000000000000c BatteryChargeI
     /tmp/ccqFA9Ez.s:289    .rodata:000000000000000d MainsMAX

UNDEFINED SYMBOLS
__ltsf2
__addsf3
__gtsf2
__gesf2
__lesf2
__do_copy_data
__do_clear_bss
