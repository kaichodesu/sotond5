GAS LISTING /tmp/ccZfYABi.s 			page 1


   1               		.file	"adc.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/kaicho/Southampton/sotond5/sotond5/libadc/",100,0,2,.Ltext0
   8               		.stabs	"adc.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"init_timer0:F(0,1)=(0,1)",36,0,7,init_timer0
  13               		.stabs	"uint8_t:t(0,2)=(0,3)=@s8;r(0,3);0;255;",128,0,126,0
  14               		.stabs	"void:t(0,1)",128,0,0,0
  15               		.stabs	"unsigned char:t(0,3)",128,0,0,0
  16               	.global	init_timer0
  17               		.type	init_timer0, @function
  18               	init_timer0:
   1:adc.c         **** #include <stdio.h>
   2:adc.c         **** #include <avr/io.h>
   3:adc.c         **** #include <util/delay.h>
   4:adc.c         **** #include <avr/interrupt.h>
   5:adc.c         **** #include "../libio/io.h"
   6:adc.c         **** 
   7:adc.c         **** void init_timer0(void)
   8:adc.c         **** {
  19               		.stabn	68,0,8,.LM0-.LFBB1
  20               	.LM0:
  21               	.LFBB1:
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 0 */
  25               	.L__stack_usage = 0
   9:adc.c         **** 	TCCR0A = 0x02; // set timer0 to CTC mode with 1024 prescaler
  26               		.stabn	68,0,9,.LM1-.LFBB1
  27               	.LM1:
  28 0000 82E0      		ldi r24,lo8(2)
  29 0002 84BD      		out 0x24,r24
  10:adc.c         **** 	TCCR0B = 0x05;
  30               		.stabn	68,0,10,.LM2-.LFBB1
  31               	.LM2:
  32 0004 85E0      		ldi r24,lo8(5)
  33 0006 85BD      		out 0x25,r24
  11:adc.c         **** 	TCNT0 = 0;
  34               		.stabn	68,0,11,.LM3-.LFBB1
  35               	.LM3:
  36 0008 16BC      		out 0x26,__zero_reg__
  12:adc.c         ****     OCR0A = 116;
  37               		.stabn	68,0,12,.LM4-.LFBB1
  38               	.LM4:
  39 000a 84E7      		ldi r24,lo8(116)
  40 000c 87BD      		out 0x27,r24
  41               	/* epilogue start */
  13:adc.c         **** 
  14:adc.c         **** 	//set prescaler to 1024, count up to 116 (OCR0A),
  15:adc.c         **** }
  42               		.stabn	68,0,15,.LM5-.LFBB1
GAS LISTING /tmp/ccZfYABi.s 			page 2


  43               	.LM5:
  44 000e 0895      		ret
  45               		.size	init_timer0, .-init_timer0
  46               	.Lscope1:
  47               		.stabs	"",36,0,0,.Lscope1-.LFBB1
  48               		.stabs	"adts_disable:F(0,1)",36,0,17,adts_disable
  49               	.global	adts_disable
  50               		.type	adts_disable, @function
  51               	adts_disable:
  16:adc.c         **** 
  17:adc.c         **** void adts_disable(void){
  52               		.stabn	68,0,17,.LM6-.LFBB2
  53               	.LM6:
  54               	.LFBB2:
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 0 */
  58               	.L__stack_usage = 0
  18:adc.c         ****     ADCSRB = 0;
  59               		.stabn	68,0,18,.LM7-.LFBB2
  60               	.LM7:
  61 0010 1092 7B00 		sts 123,__zero_reg__
  62               	/* epilogue start */
  19:adc.c         **** }
  63               		.stabn	68,0,19,.LM8-.LFBB2
  64               	.LM8:
  65 0014 0895      		ret
  66               		.size	adts_disable, .-adts_disable
  67               	.Lscope2:
  68               		.stabs	"",36,0,0,.Lscope2-.LFBB2
  69               		.stabs	"adts_enable:F(0,1)",36,0,21,adts_enable
  70               	.global	adts_enable
  71               		.type	adts_enable, @function
  72               	adts_enable:
  20:adc.c         **** 
  21:adc.c         **** void adts_enable(void){
  73               		.stabn	68,0,21,.LM9-.LFBB3
  74               	.LM9:
  75               	.LFBB3:
  76               	/* prologue: function */
  77               	/* frame size = 0 */
  78               	/* stack size = 0 */
  79               	.L__stack_usage = 0
  22:adc.c         ****     ADCSRB |=_BV(ADTS1);
  80               		.stabn	68,0,22,.LM10-.LFBB3
  81               	.LM10:
  82 0016 EBE7      		ldi r30,lo8(123)
  83 0018 F0E0      		ldi r31,0
  84 001a 8081      		ld r24,Z
  85 001c 8260      		ori r24,lo8(2)
  86 001e 8083      		st Z,r24
  23:adc.c         **** 	ADCSRB |=_BV(ADTS0);
  87               		.stabn	68,0,23,.LM11-.LFBB3
  88               	.LM11:
  89 0020 8081      		ld r24,Z
  90 0022 8160      		ori r24,lo8(1)
  91 0024 8083      		st Z,r24
GAS LISTING /tmp/ccZfYABi.s 			page 3


  92               	/* epilogue start */
  24:adc.c         **** }
  93               		.stabn	68,0,24,.LM12-.LFBB3
  94               	.LM12:
  95 0026 0895      		ret
  96               		.size	adts_enable, .-adts_enable
  97               	.Lscope3:
  98               		.stabs	"",36,0,0,.Lscope3-.LFBB3
  99               		.stabs	"calibrate_timer0:F(0,1)",36,0,26,calibrate_timer0
 100               		.stabs	"uint16_t:t(0,4)=(0,5)=r(0,5);0;0177777;",128,0,128,0
 101               		.stabs	"unsigned int:t(0,5)",128,0,0,0
 102               	.global	calibrate_timer0
 103               		.type	calibrate_timer0, @function
 104               	calibrate_timer0:
  25:adc.c         **** 
  26:adc.c         **** void calibrate_timer0(void)
  27:adc.c         **** {
 105               		.stabn	68,0,27,.LM13-.LFBB4
 106               	.LM13:
 107               	.LFBB4:
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 112               	.LBB4:
 113               	.LBB5:
  18:adc.c         **** }
 114               		.stabn	68,0,18,.LM14-.LFBB4
 115               	.LM14:
 116 0028 1092 7B00 		sts 123,__zero_reg__
 117               	.LBE5:
 118               	.LBE4:
  28:adc.c         ****     adts_disable();
  29:adc.c         ****     //  Turn off OCR0A triggering if it is enabled.
  30:adc.c         **** 	ADMUX = 0x05;
 119               		.stabn	68,0,30,.LM15-.LFBB4
 120               	.LM15:
 121 002c 85E0      		ldi r24,lo8(5)
 122 002e 8093 7C00 		sts 124,r24
  31:adc.c         ****     //  Select PA4 as the ADC source.
  32:adc.c         ****     ADCSRA |= _BV(ADSC);
 123               		.stabn	68,0,32,.LM16-.LFBB4
 124               	.LM16:
 125 0032 8091 7A00 		lds r24,122
 126 0036 8064      		ori r24,lo8(64)
 127 0038 8093 7A00 		sts 122,r24
 128               	.L5:
  33:adc.c         ****     //  start conversions in free running mode
  34:adc.c         **** 	while(ADCSRA &_BV(ADSC));
 129               		.stabn	68,0,34,.LM17-.LFBB4
 130               	.LM17:
 131 003c 8091 7A00 		lds r24,122
 132 0040 86FD      		sbrc r24,6
 133 0042 00C0      		rjmp .L5
  35:adc.c         ****     ADCSRA |=_BV(ADATE);
 134               		.stabn	68,0,35,.LM18-.LFBB4
 135               	.LM18:
GAS LISTING /tmp/ccZfYABi.s 			page 4


 136 0044 8091 7A00 		lds r24,122
 137 0048 8062      		ori r24,lo8(32)
 138 004a 8093 7A00 		sts 122,r24
 139               	.L6:
  36:adc.c         ****     //  wait for first conversion to complete
  37:adc.c         **** 	while(ADC < 100);
 140               		.stabn	68,0,37,.LM19-.LFBB4
 141               	.LM19:
 142 004e 8091 7800 		lds r24,120
 143 0052 9091 7900 		lds r25,120+1
 144               		.stabn	68,0,37,.LM20-.LFBB4
 145               	.LM20:
 146 0056 8436      		cpi r24,100
 147 0058 9105      		cpc r25,__zero_reg__
 148 005a 00F0      		brlo .L6
 149               	.L7:
  38:adc.c         ****     //  Waiting for the ADC to rise into the rectified waveform.
  39:adc.c         **** 	while(ADC > 100);
 150               		.stabn	68,0,39,.LM21-.LFBB4
 151               	.LM21:
 152 005c 8091 7800 		lds r24,120
 153 0060 9091 7900 		lds r25,120+1
 154               		.stabn	68,0,39,.LM22-.LFBB4
 155               	.LM22:
 156 0064 8536      		cpi r24,101
 157 0066 9105      		cpc r25,__zero_reg__
 158 0068 00F4      		brsh .L7
  40:adc.c         ****     LS3_hi();
 159               		.stabn	68,0,40,.LM23-.LFBB4
 160               	.LM23:
 161 006a 179A      		sbi 0x2,7
  41:adc.c         ****     //  The instant the ADC reaches 0 again, we are in phase, and can reset the timer.
  42:adc.c         ****     TCNT0 = 0;
 162               		.stabn	68,0,42,.LM24-.LFBB4
 163               	.LM24:
 164 006c 16BC      		out 0x26,__zero_reg__
  43:adc.c         ****     //  Reset timer 0.
  44:adc.c         ****     OCR0A = 88; //made this 1 value larger than necessary to prevent interrupt
 165               		.stabn	68,0,44,.LM25-.LFBB4
 166               	.LM25:
 167 006e 88E5      		ldi r24,lo8(88)
 168 0070 87BD      		out 0x27,r24
 169               	.L8:
  45:adc.c         **** 	while(TCNT0 < 87); //here we have reached a peak
 170               		.stabn	68,0,45,.LM26-.LFBB4
 171               	.LM26:
 172 0072 86B5      		in r24,0x26
 173               		.stabn	68,0,45,.LM27-.LFBB4
 174               	.LM27:
 175 0074 8735      		cpi r24,lo8(87)
 176 0076 00F0      		brlo .L8
  46:adc.c         **** 
  47:adc.c         **** 	TCNT0 = 0; //reset timer count
 177               		.stabn	68,0,47,.LM28-.LFBB4
 178               	.LM28:
 179 0078 16BC      		out 0x26,__zero_reg__
  48:adc.c         **** 	OCR0A = 116;//output compare 1 cycle after the peak
GAS LISTING /tmp/ccZfYABi.s 			page 5


 180               		.stabn	68,0,48,.LM29-.LFBB4
 181               	.LM29:
 182 007a 84E7      		ldi r24,lo8(116)
 183 007c 87BD      		out 0x27,r24
  49:adc.c         **** 
  50:adc.c         **** 	adts_enable();
 184               		.stabn	68,0,50,.LM30-.LFBB4
 185               	.LM30:
 186 007e 0C94 0000 		jmp adts_enable
 187               		.size	calibrate_timer0, .-calibrate_timer0
 188               	.Lscope4:
 189               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 190               		.stabs	"init_adc:F(0,1)",36,0,53,init_adc
 191               	.global	init_adc
 192               		.type	init_adc, @function
 193               	init_adc:
  51:adc.c         **** }
  52:adc.c         **** 
  53:adc.c         **** void init_adc(void){
 194               		.stabn	68,0,53,.LM31-.LFBB5
 195               	.LM31:
 196               	.LFBB5:
 197               	/* prologue: function */
 198               	/* frame size = 0 */
 199               	/* stack size = 0 */
 200               	.L__stack_usage = 0
  54:adc.c         ****     ADCSRA |=_BV(ADPS2) |_BV(ADPS1);
 201               		.stabn	68,0,54,.LM32-.LFBB5
 202               	.LM32:
 203 0082 EAE7      		ldi r30,lo8(122)
 204 0084 F0E0      		ldi r31,0
 205 0086 8081      		ld r24,Z
 206 0088 8660      		ori r24,lo8(6)
 207 008a 8083      		st Z,r24
  55:adc.c         ****     ADCSRA |=_BV(ADEN);
 208               		.stabn	68,0,55,.LM33-.LFBB5
 209               	.LM33:
 210 008c 8081      		ld r24,Z
 211 008e 8068      		ori r24,lo8(-128)
 212 0090 8083      		st Z,r24
  56:adc.c         ****     //  Enable ADC
  57:adc.c         **** 	//  ADCSRA |=_BV(ADATE);
  58:adc.c         ****     //  Enable Auto triggering
  59:adc.c         ****     calibrate_timer0();
 213               		.stabn	68,0,59,.LM34-.LFBB5
 214               	.LM34:
 215 0092 0C94 0000 		jmp calibrate_timer0
 216               		.size	init_adc, .-init_adc
 217               	.Lscope5:
 218               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 219               		.stabs	"",100,0,0,.Letext0
 220               	.Letext0:
 221               		.ident	"GCC: (GNU) 11.2.0"
GAS LISTING /tmp/ccZfYABi.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccZfYABi.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccZfYABi.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccZfYABi.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccZfYABi.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccZfYABi.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccZfYABi.s:18     .text:0000000000000000 init_timer0
     /tmp/ccZfYABi.s:51     .text:0000000000000010 adts_disable
     /tmp/ccZfYABi.s:72     .text:0000000000000016 adts_enable
     /tmp/ccZfYABi.s:104    .text:0000000000000028 calibrate_timer0
     /tmp/ccZfYABi.s:193    .text:0000000000000082 init_adc

NO UNDEFINED SYMBOLS
